{"ast":null,"code":"var _jsxFileName = \"/Users/thabatamarchi/Documents/Testes/tarot-game-one-resolution/webapp/src/components/CardsTarot/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport './CardsTarot.css';\n\nconst CardsTarot = ({\n  image,\n  name,\n  flipped,\n  id,\n  pathCard,\n  cardsTarot,\n  CardTurn\n}) => {\n  const pathCards = !flipped ? pathCard.url + image : pathCard.cardBack;\n  const [visibleCard, setVisibleCard] = useState(\"hide\");\n  useEffect(() => {\n    if (!flipped) {\n      setVisibleCard(\"visible\");\n    }\n  }, [visibleCard]);\n\n  const GameStart = () => {\n    let index = cardsTarot.find(flipped => flipped.flipped === false);\n\n    if (!index) {\n      setVisibleCard(\"visible\");\n      CardTurn(id);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"col l2 m4 s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cards\",\n    onClick: flipped ? GameStart : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: pathCards,\n    alt: \"Imagens\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: `card-body ${visibleCard}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"))));\n};\n\nexport default CardsTarot;","map":{"version":3,"sources":["/Users/thabatamarchi/Documents/Testes/tarot-game-one-resolution/webapp/src/components/CardsTarot/index.js"],"names":["React","useState","useEffect","CardsTarot","image","name","flipped","id","pathCard","cardsTarot","CardTurn","pathCards","url","cardBack","visibleCard","setVisibleCard","GameStart","index","find"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA,EAAxB;AAA4BC,EAAAA,QAA5B;AAAsCC,EAAAA,UAAtC;AAAkDC,EAAAA;AAAlD,CAAD,KAAkE;AACnF,QAAMC,SAAS,GAAG,CAACL,OAAD,GAAWE,QAAQ,CAACI,GAAT,GAAeR,KAA1B,GAAkCI,QAAQ,CAACK,QAA7D;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,MAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,OAAL,EAAc;AACZS,MAAAA,cAAc,CAAC,SAAD,CAAd;AAED;AACF,GALQ,EAKN,CAACD,WAAD,CALM,CAAT;;AAQA,QAAME,SAAS,GAAG,MAAM;AACtB,QAAIC,KAAK,GAAGR,UAAU,CAACS,IAAX,CAAiBZ,OAAO,IAAIA,OAAO,CAACA,OAAR,KAAoB,KAAhD,CAAZ;;AACA,QAAI,CAACW,KAAL,EAAa;AACXF,MAAAA,cAAc,CAAC,SAAD,CAAd;AACAL,MAAAA,QAAQ,CAACH,EAAD,CAAR;AACD;AACF,GAND;;AAQA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAGD,OAAO,GAAGU,SAAH,GAAe,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEL,SAAV;AAAqB,IAAA,GAAG,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAG,aAAYG,WAAY,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BT,IAA5B,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGAFF,CAJF,CADF,CADF;AAaD,CAjCD;;AAmCA,eAAeF,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './CardsTarot.css';\n\nconst CardsTarot = ({ image, name, flipped, id, pathCard, cardsTarot, CardTurn }) => {\n  const pathCards = !flipped ? pathCard.url + image : pathCard.cardBack;\n  const [visibleCard, setVisibleCard] = useState(\"hide\");\n  \n  useEffect(() => {\n    if( !flipped ){\n      setVisibleCard(\"visible\");\n\n    }\n  }, [visibleCard]);\n\n\n  const GameStart = () => {  \n    let index = cardsTarot.find( flipped => flipped.flipped === false );\n    if( !index ) {\n      setVisibleCard(\"visible\");\n      CardTurn(id);\n    } \n  }\n\n  return (\n    <>\n      <div className=\"col l2 m4 s12\">\n        <div className=\"cards\" onClick={ flipped ? GameStart : null }>\n          <img src={pathCards} alt=\"Imagens\" />\n        </div>\n        <div className={`card-body ${visibleCard}`}>\n          <h2 className=\"card-title\">{name}</h2>\n          <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default CardsTarot;"]},"metadata":{},"sourceType":"module"}